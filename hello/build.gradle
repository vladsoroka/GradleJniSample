import org.gradle.internal.jvm.Jvm

/*
 * There is currently no "C application" plugin, so this build uses the "C++ application" plugin and then reconfigures it
 * to build C instead.
 */
apply plugin: 'cpp-library'

group 'org.example'
version '1.0-SNAPSHOT'

library {
    binaries.configureEach { CppBinary binary ->
        def compileTask = binary.compileTask.get()
        def toolChain = binary.toolChain
        println("Show use toolChain : "+toolChain.name)
        compileTask.includes.from("${Jvm.current().javaHome}/include")
        def osFamily = binary.targetPlatform.targetMachine.operatingSystemFamily
        if (osFamily.macOs) {
            compileTask.includes.from("${Jvm.current().javaHome}/include/darwin")
        } else if (osFamily.linux) {
            compileTask.includes.from("${Jvm.current().javaHome}/include/linux")
        } else if (osFamily.windows) {
            compileTask.includes.from("${Jvm.current().javaHome}/include/win32")
            //FIXME TODO !! if use Android Studio NDK (clang ? Cmake ? ) extra  include ?
            if (toolChain instanceof GccCompatibleToolChain){
//                compileTask.includes.from(" ")
                //FIXME  gcc pass clang !!
                compileTask.includes.from("D:\\Program Files\\MinGW\\mingw64\\include")
                compileTask.includes.from("D:\\Program Files\\MinGW\\mingw64\\x86_64-w64-mingw32\\include")
                compileTask.includes.from("D:\\Program Files\\MinGW\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++")
                compileTask.includes.from("D:\\Program Files\\MinGW\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++\\x86_64-w64-mingw32")
                compileTask.includes.from("D:\\Program Files\\MinGW\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++\\backward")
            }
        }
        compileTask.source.from fileTree(dir: "../hello_pure_library/src/main/jni", include: "**/*.c")
        if (toolChain instanceof VisualCpp) {
            compileTask.compilerArgs.addAll(["/TC"])
        } else if (toolChain instanceof GccCompatibleToolChain) {
            compileTask.compilerArgs.addAll(["-x", "c", "-std=c11", "-v"])
        }
    }
}
